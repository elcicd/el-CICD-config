{{- if $.Values.profiles }}
  {{- if not (kindIs "slice" $.Values.profiles) }}
    {{- fail (printf "Profiles must be specified as an array: %s" $.Values.profiles) }}
  {{- end }}
{{- end }}
{{- $skippedList := list }}
{{- $_ := set $.Values "templates" ($.Values.templates | default dict) }}
{{- include "elCicdChart.processProfiles" $ }}
{{- $_ := set $.Values "templateVars" ($.Values.templateVars | default dict) }}
{{- include "elCicdChart.defineDefaultVars" $ }}
{{- include "elCicdChart.interpolateValues" (list $.Values.templates $.Values.templateVars) }}
{{- range $templateValues := $.Values.templates }}
  {{- $_ := set $templateValues "appName" ($templateValues.appName | default $.Values.microService) }}
  {{ $render := true }}
  {{- if $templateValues.forProfiles }}
    {{- range $profile := $templateValues.forProfiles }}
      {{- $render = and $render (has $profile $.Values.profiles) }}
    {{- end }}
  {{- end }}
  {{- if and $render $templateValues.notProfiles }}
    {{- range $profile := $templateValues.notProfiles }}
      {{- $render = and $render (not (has $profile $.Values.profiles)) }}
    {{- end }}
  {{- end }}
  {{- if $render }}
    {{- $templateName := printf "elCicdChart.%s" $templateValues.templateName }}
    {{- include $templateName (list $ $templateValues) }}
  {{- else }}
    {{- $skippedList = append $skippedList (list $templateValues.templateName $templateValues.appName) }}
  {{- end}}
{{- end }}
{{- if $.Values.microService }}
 {{- include "elCicdChart.microServiceMetaInfo" . }}
{{- end }}
---
# Profiles: {{ $.Values.profiles }}
{{- range $skipped := $skippedList }}
  {{- include "elCicdChart.skippedTemplate" $skipped }}
{{- end }}