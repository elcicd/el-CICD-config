###########################################################
##
## el-CICD Non-prod System Information
##
## The specific variables used for a non-prod el-CICD install.  Values
## defined here are used on the command line, and define all other
## files to be included for configuration.  Any values defined in this file
## will have priority if they defined in any other file.
##
## The variables defined here are used both in bootstrap and in the
## the Jenkins pipelines.
##
###########################################################

CLUSTER_WILDCARD_DOMAIN=apps-crc.testing

###########################################################
##
## BOOTSTRAP File Includes define variables only accessible to bootstrap scripts.
##
## SYSTEM File Includes define variables accessible to bootstrap scripts and el-CICD Jenkins pipelines
##
## File lists should be ':' delimited; e.g. file1.conf:file2.conf:file3.conf, and in priority order from
## most to least; i.e. file1.conf > file2.conf > file3.conf.
##
## The el-CICD.sh config file argument will override all files listed below.
##
###########################################################

INCLUDE_BOOTSTRAP_FILES=el-cicd-default-bootstrap.conf

INCLUDE_SYSTEM_FILES=el-cicd-non-prod.conf:el-cicd-default-system-develop.conf

EL_CICD_DEPLOY_KEY_TITLE_PREFIX=el-cicd-non-prod-deploy-key

###########################################################
##
## Image repository configuration per environment.
## NOTE: configuration for each environment must follow the same pattern for environment ENV:
##
## <ENV>_IMAGE_REPO_DOMAIN=<some repository domain>
## <ENV>_IMAGE_REPO_USERNAME=<some repository username or organization id>
## <ENV>_IMAGE_REPO=<some repository url *_IMAGE_REPO_DOMAIN/*${el.cicd.IMAGE_REPO_USERNAME_POSTFIX}>
## <ENV>_IMAGE_REPO_PULL_SECRET=<some pull secret name; secret is generated at startup with this name>
## <ENV>_IMAGE_REPO_ACCESS_TOKEN_ID=<some id that will be used as the Jenkins credentials id>
## <ENV>_NODE_SELECTORS=<any node selectors you want the SDLC project to have>
## <ENV>_IMAGE_REPO_ENABLE_TLS=<whether to enable TLS verification for image registries; default is true>
##
###########################################################

DEV_IMAGE_REPO_USERNAME=dev
DEV_IMAGE_REPO=dev-docker-registry.apps-crc.testing
DEV_IMAGE_REPO_ENABLE_TLS=false

QA_IMAGE_REPO_USERNAME=nonprod
QA_IMAGE_REPO=nonprod-docker-registry.apps-crc.testing
QA_IMAGE_REPO_ENABLE_TLS=false

UAT_IMAGE_REPO_USERNAME=${QA_IMAGE_REPO_USERNAME}
UAT_IMAGE_REPO=${QA_IMAGE_REPO}
UAT_IMAGE_REPO_ENABLE_TLS=${QA_IMAGE_REPO_ENABLE_TLS}

HOTFIX_IMAGE_REPO_USERNAME=${DEV_IMAGE_REPO_USERNAME}
HOTFIX_IMAGE_REPO=${DEV_IMAGE_REPO}
HOTFIX_IMAGE_REPO_ENABLE_TLS=${DEV_IMAGE_REPO_ENABLE_TLS}

###########################################################
##
## Developer specific settings for CRC, the Docker Registries, and/or NFS setup
##
###########################################################

# PREFERRED CRC OPTIONS
# MINUMUM VALUES ARE 8 vCPUs, 49152M (48G) memory, 128G disk space
# PREFERRED VALUES ARE 12 vCPUs, 65536M (64G) memory, 256G disk space
# 100G DISK

CRC_V_CPU=8
# CRC_V_CPU=12

CRC_MEMORY=49152
# CRC_MEMORY=65536

CRC_DISK=128
# CRC_DISK=256

CRC_SHELL=bash
#CRC_SHELL=zsh

CRC_TEST_RBAC_GROUPS=devops

DOCKER_REGISTRY_NAMESPACE=docker-registry

# This list will also be used for the names of each registry
DOCKER_REGISTRY_USER_NAMES=dev:nonprod:prod

DOCKER_REGISTRY_USER_PWD=admin123

DOCKER_REGISTRY_DATA_NFS_DIR=/mnt/docker-registry

TMP_DIR=/tmp/docker-registry
